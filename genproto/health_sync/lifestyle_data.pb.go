// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: lifestyle_data.proto

package health_sync

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LifestyleCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HeartRate     string  `protobuf:"bytes,2,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	BloodPressure string  `protobuf:"bytes,3,opt,name=blood_pressure,json=bloodPressure,proto3" json:"blood_pressure,omitempty"`
	Weight        string  `protobuf:"bytes,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        string  `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
	Temperature   float32 `protobuf:"fixed32,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	StressLevel   int32   `protobuf:"varint,7,opt,name=stress_level,json=stressLevel,proto3" json:"stress_level,omitempty"`
	SleepDuration float32 `protobuf:"fixed32,8,opt,name=sleep_duration,json=sleepDuration,proto3" json:"sleep_duration,omitempty"`
}

func (x *LifestyleCreate) Reset() {
	*x = LifestyleCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lifestyle_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifestyleCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifestyleCreate) ProtoMessage() {}

func (x *LifestyleCreate) ProtoReflect() protoreflect.Message {
	mi := &file_lifestyle_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifestyleCreate.ProtoReflect.Descriptor instead.
func (*LifestyleCreate) Descriptor() ([]byte, []int) {
	return file_lifestyle_data_proto_rawDescGZIP(), []int{0}
}

func (x *LifestyleCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LifestyleCreate) GetHeartRate() string {
	if x != nil {
		return x.HeartRate
	}
	return ""
}

func (x *LifestyleCreate) GetBloodPressure() string {
	if x != nil {
		return x.BloodPressure
	}
	return ""
}

func (x *LifestyleCreate) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *LifestyleCreate) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *LifestyleCreate) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *LifestyleCreate) GetStressLevel() int32 {
	if x != nil {
		return x.StressLevel
	}
	return 0
}

func (x *LifestyleCreate) GetSleepDuration() float32 {
	if x != nil {
		return x.SleepDuration
	}
	return 0
}

type Lifestyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HeartRate     string  `protobuf:"bytes,3,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	BloodPressure string  `protobuf:"bytes,4,opt,name=blood_pressure,json=bloodPressure,proto3" json:"blood_pressure,omitempty"`
	Weight        string  `protobuf:"bytes,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        string  `protobuf:"bytes,6,opt,name=height,proto3" json:"height,omitempty"`
	Temperature   float32 `protobuf:"fixed32,7,opt,name=temperature,proto3" json:"temperature,omitempty"`
	StressLevel   int32   `protobuf:"varint,8,opt,name=stress_level,json=stressLevel,proto3" json:"stress_level,omitempty"`
	SleepDuration float32 `protobuf:"fixed32,9,opt,name=sleep_duration,json=sleepDuration,proto3" json:"sleep_duration,omitempty"`
}

func (x *Lifestyle) Reset() {
	*x = Lifestyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lifestyle_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lifestyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lifestyle) ProtoMessage() {}

func (x *Lifestyle) ProtoReflect() protoreflect.Message {
	mi := &file_lifestyle_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lifestyle.ProtoReflect.Descriptor instead.
func (*Lifestyle) Descriptor() ([]byte, []int) {
	return file_lifestyle_data_proto_rawDescGZIP(), []int{1}
}

func (x *Lifestyle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lifestyle) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Lifestyle) GetHeartRate() string {
	if x != nil {
		return x.HeartRate
	}
	return ""
}

func (x *Lifestyle) GetBloodPressure() string {
	if x != nil {
		return x.BloodPressure
	}
	return ""
}

func (x *Lifestyle) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *Lifestyle) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *Lifestyle) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Lifestyle) GetStressLevel() int32 {
	if x != nil {
		return x.StressLevel
	}
	return 0
}

func (x *Lifestyle) GetSleepDuration() float32 {
	if x != nil {
		return x.SleepDuration
	}
	return 0
}

type LifestyleUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeartRate     string  `protobuf:"bytes,1,opt,name=heart_rate,json=heartRate,proto3" json:"heart_rate,omitempty"`
	BloodPressure string  `protobuf:"bytes,2,opt,name=blood_pressure,json=bloodPressure,proto3" json:"blood_pressure,omitempty"`
	Weight        string  `protobuf:"bytes,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Height        string  `protobuf:"bytes,4,opt,name=height,proto3" json:"height,omitempty"`
	Temperature   float32 `protobuf:"fixed32,5,opt,name=temperature,proto3" json:"temperature,omitempty"`
	StressLevel   int32   `protobuf:"varint,6,opt,name=stress_level,json=stressLevel,proto3" json:"stress_level,omitempty"`
	SleepDuration float32 `protobuf:"fixed32,7,opt,name=sleep_duration,json=sleepDuration,proto3" json:"sleep_duration,omitempty"`
}

func (x *LifestyleUpdate) Reset() {
	*x = LifestyleUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lifestyle_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifestyleUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifestyleUpdate) ProtoMessage() {}

func (x *LifestyleUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lifestyle_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifestyleUpdate.ProtoReflect.Descriptor instead.
func (*LifestyleUpdate) Descriptor() ([]byte, []int) {
	return file_lifestyle_data_proto_rawDescGZIP(), []int{2}
}

func (x *LifestyleUpdate) GetHeartRate() string {
	if x != nil {
		return x.HeartRate
	}
	return ""
}

func (x *LifestyleUpdate) GetBloodPressure() string {
	if x != nil {
		return x.BloodPressure
	}
	return ""
}

func (x *LifestyleUpdate) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *LifestyleUpdate) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *LifestyleUpdate) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *LifestyleUpdate) GetStressLevel() int32 {
	if x != nil {
		return x.StressLevel
	}
	return 0
}

func (x *LifestyleUpdate) GetSleepDuration() float32 {
	if x != nil {
		return x.SleepDuration
	}
	return 0
}

type LifestyleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lifestyles []*Lifestyle `protobuf:"bytes,1,rep,name=lifestyles,proto3" json:"lifestyles,omitempty"`
	Count      int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LifestyleList) Reset() {
	*x = LifestyleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lifestyle_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifestyleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifestyleList) ProtoMessage() {}

func (x *LifestyleList) ProtoReflect() protoreflect.Message {
	mi := &file_lifestyle_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifestyleList.ProtoReflect.Descriptor instead.
func (*LifestyleList) Descriptor() ([]byte, []int) {
	return file_lifestyle_data_proto_rawDescGZIP(), []int{3}
}

func (x *LifestyleList) GetLifestyles() []*Lifestyle {
	if x != nil {
		return x.Lifestyles
	}
	return nil
}

func (x *LifestyleList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_lifestyle_data_proto protoreflect.FileDescriptor

var file_lifestyle_data_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6c, 0x65,
	0x65, 0x70, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x96, 0x02, 0x0a, 0x09, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x6c, 0x65, 0x65,
	0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x4c, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6c, 0x65, 0x65,
	0x70, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5d, 0x0a, 0x0d, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0a, 0x6c, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xb4,
	0x02, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4c, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x35, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a,
	0x16, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4c, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lifestyle_data_proto_rawDescOnce sync.Once
	file_lifestyle_data_proto_rawDescData = file_lifestyle_data_proto_rawDesc
)

func file_lifestyle_data_proto_rawDescGZIP() []byte {
	file_lifestyle_data_proto_rawDescOnce.Do(func() {
		file_lifestyle_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_lifestyle_data_proto_rawDescData)
	})
	return file_lifestyle_data_proto_rawDescData
}

var file_lifestyle_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_lifestyle_data_proto_goTypes = []any{
	(*LifestyleCreate)(nil), // 0: health_sync.LifestyleCreate
	(*Lifestyle)(nil),       // 1: health_sync.Lifestyle
	(*LifestyleUpdate)(nil), // 2: health_sync.LifestyleUpdate
	(*LifestyleList)(nil),   // 3: health_sync.LifestyleList
	(*GetById)(nil),         // 4: health_sync.GetById
	(*Void)(nil),            // 5: health_sync.Void
}
var file_lifestyle_data_proto_depIdxs = []int32{
	1, // 0: health_sync.LifestyleList.lifestyles:type_name -> health_sync.Lifestyle
	0, // 1: health_sync.LifestyleService.Create:input_type -> health_sync.LifestyleCreate
	2, // 2: health_sync.LifestyleService.Update:input_type -> health_sync.LifestyleUpdate
	4, // 3: health_sync.LifestyleService.Delete:input_type -> health_sync.GetById
	4, // 4: health_sync.LifestyleService.Get:input_type -> health_sync.GetById
	4, // 5: health_sync.LifestyleService.List:input_type -> health_sync.GetById
	5, // 6: health_sync.LifestyleService.Create:output_type -> health_sync.Void
	5, // 7: health_sync.LifestyleService.Update:output_type -> health_sync.Void
	5, // 8: health_sync.LifestyleService.Delete:output_type -> health_sync.Void
	1, // 9: health_sync.LifestyleService.Get:output_type -> health_sync.Lifestyle
	3, // 10: health_sync.LifestyleService.List:output_type -> health_sync.LifestyleList
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_lifestyle_data_proto_init() }
func file_lifestyle_data_proto_init() {
	if File_lifestyle_data_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lifestyle_data_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LifestyleCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lifestyle_data_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Lifestyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lifestyle_data_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LifestyleUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lifestyle_data_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*LifestyleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lifestyle_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lifestyle_data_proto_goTypes,
		DependencyIndexes: file_lifestyle_data_proto_depIdxs,
		MessageInfos:      file_lifestyle_data_proto_msgTypes,
	}.Build()
	File_lifestyle_data_proto = out.File
	file_lifestyle_data_proto_rawDesc = nil
	file_lifestyle_data_proto_goTypes = nil
	file_lifestyle_data_proto_depIdxs = nil
}
